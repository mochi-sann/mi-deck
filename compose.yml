
services:
  postgres:
    container_name: new-db 
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres-db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

  # https-portal:
  #   image: steveltn/https-portal:1
  #   ports:
  #     - '80:80'
  #     - '443:443'
  #   links:
  #     - misskey-web
  #
  #   # restart: always
  #   environment:
  #     DOMAINS: "local-misskey.local -> http://misskey-web:3000"
  #     STAGE: local
  #     WEBSOCKET: "true"
  #     HSTS_MAX_AGE: 6  # in seconds
  #     # DOMAINS: 'example.com'
  #     # STAGE: 'production' # Don't use production until staging works
  #   volumes:
  #     - https-portal-data:/var/lib/https-portal
  #   networks:
  #     - app-network


  # https-portal:
  #   image: steveltn/https-portal:1
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   environment:
  #     DOMAINS: "misskey.local -> http://misskey-web:3000"
  #     STAGE: "local"
  #   # restart: always
  #   networks:
  #     - app-network
  misskey-web:
    # build: .
    image : misskey/misskey:2025.9.0
    # restart: always
    links:
      - misskey-db
      - redis
#     - mcaptcha
#     - meilisearch
    depends_on:
      misskey-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3002:3000"
    networks:
      - app-network
      - internal_network
      - external_network
    # env_file:
    #   - .config/docker.env
    volumes:
      - ./misskey-files:/misskey/files
      - ./.config:/misskey/.config:ro

  redis:
    # restart: always
    image: redis:7-alpine
    networks:
      - internal_network
    volumes:
      - ./redis:/data
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  misskey-db:
    # restart: always
    image: postgres:15-alpine
    networks:
      - internal_network
    env_file:
      - .config/docker.env
    volumes:
      - misskey-db:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

#  mcaptcha:
#    restart: always
#    image: mcaptcha/mcaptcha:latest
#    networks:
#      internal_network:
#      external_network:
#        aliases:
#          - localhost
#    ports:
#      - 7493:7493
#    env_file:
#      - .config/docker.env
#    environment:
#      PORT: 7493
#      MCAPTCHA_redis_URL: "redis://mcaptcha_redis/"
#    depends_on:
#      misskey-db:
#        condition: service_healthy
#      mcaptcha_redis:
#        condition: service_healthy
#
#  mcaptcha_redis:
#    image: mcaptcha/cache:latest
#    networks:
#      - internal_network
#    healthcheck:
#      test: "redis-cli ping"
#      interval: 5s
#      retries: 20

#  meilisearch:
#    restart: always
#    image: getmeili/meilisearch:v1.3.4
#    environment:
#      - MEILI_NO_ANALYTICS=true
#      - MEILI_ENV=production
#    env_file:
#      - .config/meilisearch.env
#    networks:
#      - internal_network
#    volumes:
#      - ./meili_data:/meili_data

networks:
  internal_network:
    internal: true
  external_network:
  app-network:
    driver: bridge

volumes:
  misskey-db:
  postgres-db:
  misskey-file:
    # https-portal-data: # Recommended, to avoid re-signing when upgrading HTTPS-PORTAL
